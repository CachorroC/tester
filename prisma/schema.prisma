generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carpeta {
  category        String     @default("SinEspecificar")
  codeudor        Codeudor?
  demanda         Demanda?
  deudor          Deudor?
  facturas        Factura[]
  fecha           DateTime?
  id              Int
  idProcesos      Int[]
  idRegUltimaAct  Int?
  llaveProceso    String
  nombre          String
  notas           Nota[]
  notasCount Int?
  numero          Int        @id
  procesos        Proceso[]
  revisado        Boolean    @default(false)
  tareas          Task[]
  terminado       Boolean    @default(false)
  tipoProceso     String     @default("SINGULAR")
  ultimaActuacion Actuacion? @relation(fields: [idRegUltimaAct], references: [idRegActuacion])
  updatedAt       DateTime   @updatedAt
}

model Factura {
  id                 String          @id
  facturaElectronica String?
  secondaryFactura   Json?
  ciudad             String
  dv                 Int
  fecha              DateTime        @db.Date
  razonSocial        String
  nombreComercial    String?
  direccion          String
  valorBase          Decimal         @db.Money
  hasOtroImp         Boolean         @default(false)
  hasIva             Boolean         @default(false)
  hasIcui            Boolean         @default(false)
  hasImpoConsumo     Boolean         @default(false)
  nit                Int
  valorIva           Decimal?        @db.Money
  valorOtroImp       Decimal?        @db.Money
  valorTotal         Decimal         @db.Money
  concepto           String
  carpetaNumero      Int?
  CUFE               String?
  QRCode             String?
  carpeta            Carpeta?        @relation(fields: [carpetaNumero], references: [numero])
  emisorDeFactura    EmisorDeFactura @relation(fields: [nit], references: [nit])
}

model EmisorDeFactura {
  nit                       Int       @id
  dv                        Int
  razonSocial               String
  nombreComercial           String?
  direccion                 String?
  correo                    String?
  telefono                  Int?
  actividadEconomica        String?
  regimenFiscal             String?
  responsabilidadTributaria String?
  tipoContribuyente         String    @default("Juridica")
  ciudad                    String    @default("Bogota")
  facturas                  Factura[]
}

model Deudor {
  carpetaNumero   Int     @unique
  cedula          String
  direccion       String?
  email           String?
  id              Int     @id
  primerApellido  String
  primerNombre    String
  segundoApellido String?
  segundoNombre   String?
  telCelular      String?
  telFijo         String?
  carpeta         Carpeta @relation(fields: [carpetaNumero], references: [numero])
}

model Codeudor {
  carpeta       Carpeta @relation(fields: [carpetaNumero], references: [numero])
  carpetaNumero Int     @unique
  cedula        String?
  direccion     String?
  id            Int     @id
  nombre        String?
  telefono      String?
}

model Demanda {
  capitalAdeudado         Decimal            @default(0) @db.Money
  carpeta                 Carpeta            @relation(fields: [carpetaNumero], references: [numero])
  carpetaNumero           Int                @unique
  departamento            String?
  despacho                String?
  entregaGarantiasAbogado DateTime?          @db.Date
  etapaProcesal           String?
  fechaPresentacion       DateTime[]         @db.Date
  id                      Int                @id
  llaveProceso            String?
  mandamientoPago         DateTime[]         @db.Date
  medidasCautelares       MedidasCautelares?
  municipio               String?
  notificacion            Notificacion?
  obligacion              String[]
  radicado                String?
  tipoProceso             String
  vencimientoPagare       DateTime[]         @db.Date
  liquidacion             Decimal            @default(0) @db.Money
  avaluo                  Decimal            @default(0) @db.Money
}

model Notificacion {
  demandaId      Int        @unique
  certimail      Boolean?
  fisico         Boolean?
  id             Int        @id
  autoNotificado DateTime?  @db.Date
  demanda        Demanda    @relation(fields: [demandaId], references: [id])
  notifiers      Notifier[]
}

model MedidasCautelares {
  demandaId         Int       @unique
  fechaOrdenaMedida DateTime?
  id                Int       @id
  medidaSolicitada  String?
  demanda           Demanda   @relation(fields: [demandaId], references: [id])
}

model Notifier {
  fechaAporta    DateTime?
  fechaRecibido  DateTime?
  notificacionId Int
  resultado      Boolean?
  tipo           String
  carpetaNumero  Int
  notificacion   Notificacion @relation(fields: [notificacionId], references: [id])

  @@id([tipo, carpetaNumero])
}

model Nota {
  carpetaNumero Int?
  createdAt     DateTime  @default(now())
  id            String @id
  pathname      String?
  updatedAt     DateTime  @updatedAt
  dueDate       DateTime? @db.Date
  text          String
  content       String[]
  carpeta       Carpeta?  @relation(fields: [carpetaNumero], references: [numero])

}

model Task {
  carpetaNumero Int?
  done          Boolean  @default(false)
  createdAt     DateTime @default(now())
  dueDate       DateTime @db.Date
  id            Int      @id @default(autoincrement())
  text          String
  updatedAt     DateTime @updatedAt
  content       String[]
  carpeta       Carpeta? @relation(fields: [carpetaNumero], references: [numero])
}

model Actuacion {
  actuacion      String
  anotacion      String?
  cant           Int
  Carpeta        Carpeta[]
  carpetaNumero  Int?
  codRegla       String
  conDocumentos  Boolean
  consActuacion  Int
  createdAt      DateTime  @default(now())
  fechaActuacion DateTime  @db.Date
  fechaFinal     DateTime? @db.Date
  fechaInicial   DateTime? @db.Date
  fechaRegistro  DateTime  @db.Date
  id             Int       @id @default(autoincrement())
  idProceso      Int
  idRegActuacion Int       @unique
  isUltimaAct    Boolean
  llaveProceso   String
  proceso        Proceso?  @relation(fields: [procesoId], references: [idProceso])
  procesoId      Int?
}

model Juzgado {
  id       Int
  tipo     String    @id
  url      String
  procesos Proceso[]
}

model Proceso {
  actuaciones          Actuacion[]
  cantFilas            Int
  carpeta              Carpeta     @relation(fields: [carpetaNumero], references: [numero])
  carpetaNumero        Int
  departamento         String
  despacho             String
  esPrivado            Boolean
  fechaProceso         DateTime?   @db.Date
  fechaUltimaActuacion DateTime?   @db.Date
  id                   Int         @id @default(autoincrement())
  idConexion           Int
  idProceso            Int         @unique
  juzgado              Juzgado     @relation(fields: [juzgadoTipo], references: [tipo])
  juzgadoTipo          String
  llaveProceso         String
  sujetosProcesales    String
}

enum NotifierName {
  DOS91
  DOS92
}

enum Category {
  Terminados
  LiosJuridicos
  Bancolombia
  Reintegra
  Insolvencia
  SinEspecificar
  todos
}

enum Departamento {
  BOGOTA
  CUNDINAMARCA
  META
  ANTIOQUIA
  ATLANTICO
}

enum TipoProceso {
  HIPOTECARIO
  PRENDARIO
  SINGULAR
  ACUMULADO
}
