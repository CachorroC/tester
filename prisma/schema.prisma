generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carpeta {
  numero          Int         @id
  llaveProceso    String
  nombre          String
  idProcesos      Int[]
  category        Category    @default(SinEspecificar)
  tipoProceso     TipoProceso @default(SINGULAR)
  fecha           DateTime?
  revisado        Boolean     @default(false)
  updatedAt       DateTime    @updatedAt
  terminado       Boolean     @default(false)
  idRegUltimaAct  Int?
  ultimaActuacion Actuacion?  @relation(fields: [idRegUltimaAct], references: [idRegActuacion])
  demanda         Demanda?
  deudor          Deudor?
  codeudor Codeudor?
 notas           Nota[]
  procesos        Proceso[]
  tareas          Tarea[]
  juzgados        Juzgado[]   @relation("CarpetaToJuzgado")
}

model Deudor {
  id              Int     @id @default(autoincrement())
  cedula          String
  primerNombre    String
  primerApellido  String
  segundoNombre   String?
  segundoApellido String?
  direccion       String?
  email           String?
  telCelular      String?
  telFijo         String?
  carpetaNumero   Int     @unique
  carpeta         Carpeta @relation(fields: [carpetaNumero], references: [numero])
}

model Codeudor {
  id Int @id
  cedula    String?
  direccion String?
  nombre    String?
  telefono  String?
  carpetaNumero Int @unique
  Carpeta   Carpeta @relation(fields: [carpetaNumero], references: [numero])
}

model Nota {
  id            Int      @id @default(autoincrement())
  date          DateTime
  createdAt     DateTime @default(now())
  pathname      String?
  carpetaNumero Int?
  content       String?
  title         String
  updatedAt     DateTime @updatedAt
  carpeta       Carpeta? @relation(fields: [carpetaNumero], references: [numero])
}

model Tarea {
  id            Int        @id @default(autoincrement())
  dueDate       DateTime?  @db.Date
  carpetaNumero Int?
  complete      Boolean    @default(false)
  content       String?
  createdAt     DateTime   @default(now())
  title         String
  updatedAt     DateTime   @updatedAt
  subTareas     SubTarea[]
  Carpeta       Carpeta?   @relation(fields: [carpetaNumero], references: [numero])
}

model SubTarea {
  id         Int       @id @default(autoincrement())
  text       String
  date       DateTime?
  isComplete Boolean   @default(false)
  tareaId    Int?
  Tarea      Tarea?    @relation(fields: [tareaId], references: [id])
}

model Actuacion {
  id             Int       @id @default(autoincrement())
  carpetaNumero  Int?
  isUltimaAct    Boolean
  createdAt      DateTime  @default(now())
  idRegActuacion Int       @unique
  llaveProceso   String
  consActuacion  Int
  fechaActuacion DateTime  @db.Date
  actuacion      String
  anotacion      String?
  fechaInicial   DateTime? @db.Date
  fechaRegistro  DateTime  @db.Date
  fechaFinal     DateTime? @db.Date
  codRegla       String
  conDocumentos  Boolean
  cant           Int
  idProceso      Int
  Carpeta        Carpeta[]
}

model Demanda {
  id                      Int              @id @default(autoincrement())
  departamento            String?
  capitalAdeudado         Decimal?         @db.Money
  entregaGarantiasAbogado DateTime?        @db.Date
  tipoProceso             TipoProceso      @default(SINGULAR)
  mandamientoPago         DateTime?        @db.Date
  etapaProcesal           String?
  fechaPresentacion       DateTime?        @db.Date
  municipio               String?
  obligacion              String[]
  radicado                String?
  vencimientoPagare       DateTime[]       @db.Date
  expediente              String?
  carpetaNumero           Int              @unique
  despacho                String?
  carpeta                 Carpeta          @relation(fields: [carpetaNumero], references: [numero])
  JuzgadoDemanda          JuzgadoDemanda[]
  procesos                Proceso[]
}

model Juzgado {
  id               Int
  tipo             String           @id
  url              String
  JuzgadoDemanda   JuzgadoDemanda[]
  juzgadosProcesos JuzgadoProceso[]
  carpetas         Carpeta[]        @relation("CarpetaToJuzgado")
}

model Proceso {
  id                   Int              @id @default(autoincrement())
  idProceso            Int              @unique
  idConexion           Int
  llaveProceso         String
  fechaProceso         DateTime?        @db.Date
  fechaUltimaActuacion DateTime?        @db.Date
  despacho             String
  departamento         String
  sujetosProcesales    String
  carpetaNumero        Int
  esPrivado            Boolean
  cantFilas            Int
  demandaId            Int?
  JuzgadosProcesos     JuzgadoProceso[]
  Carpeta              Carpeta          @relation(fields: [carpetaNumero], references: [numero])
  Demanda              Demanda?         @relation(fields: [demandaId], references: [id])
}

model JuzgadoDemanda {
  demandaNumero Int
  tipo          String
  demanda       Demanda @relation(fields: [demandaNumero], references: [id])
  juzgado       Juzgado @relation(fields: [tipo], references: [tipo])

  @@id([demandaNumero, tipo])
}

model JuzgadoProceso {
  idProceso Int
  despacho  String
  juzgado   Juzgado @relation(fields: [despacho], references: [tipo])
  proceso   Proceso @relation(fields: [idProceso], references: [idProceso])

  @@id([idProceso, despacho])
}

enum Category {
  Terminados
  LiosJuridicos
  Bancolombia
  Reintegra
  Insolvencia
  SinEspecificar
  todos
}

enum Departamento {
  BOGOTA
  CUNDINAMARCA
  META
  ANTIOQUIA
  ATLANTICO
}

enum TipoProceso {
  HIPOTECARIO
  PRENDARIO
  SINGULAR
  ACUMULADO
}
