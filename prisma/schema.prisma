generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carpeta {
  category        Category      @default(SinEspecificar)
  codeudor        Codeudor?
  demandas        Demanda[]
  deudor          Deudor?
  fecha           DateTime?
  idProcesos      Int[]
  idRegUltimaAct  Int?
  juzgados        Juzgado[]
  llaveProceso    String
  nombre          String
  notas           Nota[]
  numero          Int           @id
  revisado        Boolean       @default(false)
  tareas          Tarea[]
  terminado       Boolean       @default(false)
  tipoProceso     TipoProceso   @default(SINGULAR)
  updatedAt       DateTime      @updatedAt
  ultimaActuacion Actuacion?    @relation(fields: [idRegUltimaAct], references: [idRegActuacion])
  procesos        Proceso[]
  notificacion    Notificacion?
}

model Deudor {
  id              Int     @id @default(autoincrement())
  cedula          String
  primerNombre    String
  primerApellido  String
  segundoNombre   String?
  segundoApellido String?
  direccion       String?
  email           String?
  telCelular      String?
  telFijo         String?
  carpetaNumero   Int     @unique
  carpeta         Carpeta @relation(fields: [carpetaNumero], references: [numero])
}

model Codeudor {
  id            Int     @id
  cedula        String?
  direccion     String?
  nombre        String?
  telefono      String?
  carpetaNumero Int     @unique
  Carpeta       Carpeta @relation(fields: [carpetaNumero], references: [numero])
}

model Nota {
  id            Int      @id @default(autoincrement())
  date          DateTime
  createdAt     DateTime @default(now())
  pathname      String?
  carpetaNumero Int?
  content       String?
  title         String
  updatedAt     DateTime @updatedAt
  carpeta       Carpeta? @relation(fields: [carpetaNumero], references: [numero])
}

model Tarea {
  id            Int        @id @default(autoincrement())
  dueDate       DateTime?  @db.Date
  carpetaNumero Int?
  complete      Boolean    @default(false)
  content       String?
  createdAt     DateTime   @default(now())
  title         String
  updatedAt     DateTime   @updatedAt
  subTareas     SubTarea[]
  Carpeta       Carpeta?   @relation(fields: [carpetaNumero], references: [numero])
}

model SubTarea {
  id         Int       @id @default(autoincrement())
  text       String
  date       DateTime?
  isComplete Boolean   @default(false)
  tareaId    Int?
  Tarea      Tarea?    @relation(fields: [tareaId], references: [id])
}

model Actuacion {
  id             Int       @id @default(autoincrement())
  carpetaNumero  Int?
  isUltimaAct    Boolean
  createdAt      DateTime  @default(now())
  idRegActuacion Int       @unique
  llaveProceso   String
  consActuacion  Int
  fechaActuacion DateTime  @db.Date
  actuacion      String
  anotacion      String?
  fechaInicial   DateTime? @db.Date
  fechaRegistro  DateTime  @db.Date
  fechaFinal     DateTime? @db.Date
  codRegla       String
  conDocumentos  Boolean
  cant           Int
  idProceso      Int
  Carpeta        Carpeta[]
}

model Demanda {
  id                      Int                @id @default(autoincrement())
  departamento            String?
  capitalAdeudado         Decimal?           @db.Money
  entregaGarantiasAbogado DateTime?          @db.Date
  tipoProceso             TipoProceso        @default(SINGULAR)
  mandamientoPago         DateTime?          @db.Date
  etapaProcesal           String?
  municipio               String?
  obligacion              String[]
  radicado                String?
  vencimientoPagare       DateTime[]         @db.Date
  carpetaNumero           Int
  despacho                String?
  idProceso               Int                @unique
  idConexion              Int?
  llaveProceso            String?
  fechaProceso            DateTime?          @db.Date
  fechaUltimaActuacion    DateTime?          @db.Date
  sujetosProcesales       String?
  esPrivado               Boolean?
  cantFilas               Int?
  fechaPresentacion       DateTime[]         @db.Date
  carpeta                 Carpeta            @relation(fields: [carpetaNumero], references: [numero])
  medidasCautelares       MedidasCautelares?
}

model Notificacion {
  id             Int        @id @default(autoincrement())
  certimail      Boolean?
  fisico         Boolean?
  carpetaNumero  Int        @unique
  carpeta        Carpeta    @relation(fields: [carpetaNumero], references: [numero])
  autoNotificado String?
  notifiers      Notifier[]
}

model MedidasCautelares {
  id                Int       @id @default(autoincrement())
  fechaOrdenaMedida DateTime?
  medidaSolicitada  String?
  demandaId         Int       @unique
  Demanda           Demanda   @relation(fields: [demandaId], references: [idProceso])
}

model Notifier {
  id             Int           @id @default(autoincrement())
  fechaRecibido  DateTime?
  resultado      Boolean?
  tipo           String
  fechaAporta    DateTime?
  notificacionId Int?
  Notificacion   Notificacion? @relation(fields: [notificacionId], references: [id])
}

model Juzgado {
  id       Int
  tipo     String    @id
  url      String
  carpetas Carpeta[]
}

model Proceso {
  id                   Int       @id @default(autoincrement())
  idProceso            Int       @unique
  idConexion           Int
  llaveProceso         String
  fechaProceso         DateTime? @db.Date
  fechaUltimaActuacion DateTime? @db.Date
  despacho             String
  departamento         String
  sujetosProcesales    String
  carpetaNumero        Int
  esPrivado            Boolean
  cantFilas            Int
  Carpeta              Carpeta   @relation(fields: [carpetaNumero], references: [numero])
}

enum NotifierName {
  DOS91
  DOS92
}

enum Category {
  Terminados
  LiosJuridicos
  Bancolombia
  Reintegra
  Insolvencia
  SinEspecificar
  todos
}

enum Departamento {
  BOGOTA
  CUNDINAMARCA
  META
  ANTIOQUIA
  ATLANTICO
}

enum TipoProceso {
  HIPOTECARIO
  PRENDARIO
  SINGULAR
  ACUMULADO
}
