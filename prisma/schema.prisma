// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carpeta {
  numero       Int         @id
  llaveProceso String?     @unique
  demandaId    Int?
  nombre       String
  idProcesos   Int[]
  deudorCedula String?
  category     Category    @default(SinEspecificar)
  deudor       Deudor?     @relation(fields: [deudorCedula], references: [cedula])
  demanda      Demanda?    @relation(fields: [demandaId], references: [id])
  Nota         Nota[]
  Tarea        Tarea[]
  procesos     Proceso[]
  actuaciones  Actuacion[]
}

model Deudor {
  cedula          String    @id
  primerNombre    String
  segundoNombre   String?
  primerApellido  String
  segundoApellido String?
  direccion       String?
  email           String?
  telCelular      Int?
  telFijo         Int?
  Carpeta         Carpeta[]
}

model Nota {
  text          String
  id            Int      @id @unique @default(autoincrement())
  date          DateTime
  createdAt     DateTime @default(now())
  pathname      String?
  carpetaNumero Int?
  carpeta       Carpeta? @relation(fields: [carpetaNumero], references: [numero])
}

model Tarea {
  id           Int        @id @unique @default(autoincrement())
  creationDate DateTime   @default(now()) @db.Date
  dueDate      DateTime?  @db.Date
  Carpeta      Carpeta?   @relation(fields: [carpetaId], references: [numero])
  carpetaId    Int?
  text         String
  isComplete   Boolean
  subTareas    SubTarea[]
}

model SubTarea {
  text       String    @id
  date       DateTime?
  isComplete Boolean
  Tarea      Tarea?    @relation(fields: [tareaId], references: [id])
  tareaId    Int?
}

model Actuacion {
  createdAt        DateTime  @default(now())
  idRegActuacion   Int       @id @db.Oid
  llaveProceso     String
  consActuacion    Int
  fechaActuacion   DateTime  @db.Date
  actuacion        String
  anotacion        String?
  fechaInicial     DateTime? @db.Date
  fechaRegistro    DateTime  @db.Date
  fechaFinal       DateTime? @db.Date
  codRegla         String
  conDocumentos    Boolean
  cant             Int
  Carpeta          Carpeta?  @relation(fields: [carpetaId], references: [numero])
  carpetaId        Int?
  Proceso          Proceso?  @relation(fields: [procesoIdProceso], references: [idProceso])
  procesoIdProceso Int?
}

model Demanda {
  id                      Int         @id @default(autoincrement())
  departamento            String?
  capitalAdeudado         Decimal?    @db.Money
  entregaGarantiasAbogado DateTime?   @db.Date
  tipoProceso             TipoProceso @default(SINGULAR)
  mandamientoPago         DateTime?   @db.Date
  etapaProcesal           String?
  fechaPresentacion       DateTime?   @db.Date
  municipio               String?
  obligacion              String[]
  radicado                String?
  vencimientoPagare       DateTime[]  @db.Date
  expediente              String?
  juzgados                Juzgado[]
  carpetas                Carpeta[]
}

model Juzgado {
  id      Int
  tipo    String    @id @unique
  url     String
  Proceso Proceso[]
  demanda Demanda[]
}

model Proceso {
  idProceso            Int         @id
  idConexion           Int
  llaveProceso         String
  fechaProceso         DateTime?   @db.Date
  fechaUltimaActuacion DateTime?   @db.Date
  despacho             String
  departamento         String
  sujetosProcesales    String
  esPrivado            Boolean
  cantFilas            Int
  actuaciones          Actuacion[]
  Carpeta              Carpeta     @relation(fields: [llaveProceso], references: [llaveProceso])
  Juzgado              Juzgado[]
}

enum Category {
  Terminados
  LiosJuridicos
  Bancolombia
  Reintegra
  Insolvencia
  SinEspecificar
  todos
}

enum Departamento {
  BOGOTA
  CUNDINAMARCA
  META
  ANTIOQUIA
  ATLANTICO
}

enum TipoProceso {
  HIPOTECARIO
  PRENDARIO
  SINGULAR
  ACUMULADO
}
